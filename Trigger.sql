--1. Create INSERT, UPDATE & DELETE Stored Procedures for Person table

--INSERT PROCEDURE

CREATE PROCEDURE PR_INSERT_PERSON
@PERSONID		INT,
@PERSONNAME		VARCHAR(50),
@SALARY			DECIMAL(8,2),
@JOININGDATE	DATETIME,
@CITY			VARCHAR(100),
@AGE			INT,
@BIRTHDATE		DATETIME
AS
BEGIN
	INSERT INTO PERSON VALUES 
	(
		@PERSONID,	
		@PERSONNAME,	
		@SALARY,		
		@JOININGDATE,
		@CITY,		
		@AGE,		
		@BIRTHDATE	
	)
END

EXEC PR_INSERT_PERSON 101,'RHYDHAM',200000,'20090928','BENGLORE',22,'20090928' 
SELECT * FROM PERSON

--UPDATE PROCEDURE

CREATE PROCEDURE PR_UPDATE_PERSON
@PERSONID		INT,
@PERSONNAME		VARCHAR(50),
@SALARY			DECIMAL(8,2),
@JOININGDATE	DATETIME,
@CITY			VARCHAR(100),
@AGE			INT,
@BIRTHDATE		DATETIME
AS
BEGIN 
	UPDATE PERSON 
	SET 	
		PERSONNAME  =  @PERSONNAME	,
		SALARY		=  @SALARY		,
		JOININGDATE	=  @JOININGDATE ,
		CITY		=  @CITY		,
		AGE			=  @AGE		    ,
		BIRTHDATE	=  @BIRTHDATE	
	WHERE PERSONID	=  @PERSONID
END

EXEC PR_UPDATE_PERSON 101,'MEERA',200000,'20090928','BENGLORE',22,'20090928'

--DELETE PROCEDURE

CREATE PROCEDURE PR_DELETE_PERSON
@PERSONID INT
AS
BEGIN
	DELETE PERSON 
	WHERE PERSONID = @PERSONID
END

EXEC PR_DELETE_PERSON 101

--2. Create a trigger that fires on INSERT, UPDATE and DELETE operation on the Person table. For that,
--create a new table PersonLog to log (enter) all operations performed on the Person table

--INSERT TRIGGER

CREATE TRIGGER TR_INSERT_PERSON
ON PERSON
FOR INSERT
AS
BEGIN
	DECLARE @PERSONID INT
	DECLARE @PERSONNAME VARCHAR(50)
	SELECT  @PERSONID = PERSONID FROM inserted
	SELECT  @PERSONNAME = PERSONNAME FROM inserted
	
	INSERT INTO PERSONLOG VALUES(@PERSONID,@PERSONNAME,'INSERT',GETDATE())
END

EXEC PR_INSERT_PERSON 101,'RHYDHAM',200000,'20090928','BENGLORE',22,'20090928' 
EXEC PR_INSERT_PERSON 102,'MEERA',200000,'20090928','BENGLORE',22,'20090928' 
EXEC PR_INSERT_PERSON 103,'KENA',200000,'20090928','BENGLORE',22,'20090928' 

SELECT * FROM PERSON
SELECT * FROM PERSONLOG

--UPDATE TRIGGER

CREATE TRIGGER TR_UPDATE_PERSON
ON PERSON
FOR UPDATE
AS
BEGIN
	DECLARE @PERSONID INT
	DECLARE @PERSONNAME VARCHAR(50)
	SELECT  @PERSONID = PERSONID FROM inserted
	SELECT  @PERSONNAME = PERSONNAME FROM inserted
	
	INSERT INTO PERSONLOG VALUES(@PERSONID,@PERSONNAME,'UPDATE',GETDATE())
END

EXEC PR_UPDATE_PERSON 102,'MEERA RAICHURA',200000,'20090928','BENGLORE',22,'20090928' 

--DELETE TRIGGER

CREATE TRIGGER TR_DELETE_PERSON
ON PERSON
FOR DELETE
AS
BEGIN
	DECLARE @PERSONID INT
	DECLARE @PERSONNAME VARCHAR(50)
	SELECT  @PERSONID = PERSONID FROM deleted
	SELECT  @PERSONNAME = PERSONNAME FROM deleted
	
	INSERT INTO PERSONLOG VALUES(@PERSONID,@PERSONNAME,'DELETE',GETDATE())
END

EXEC PR_DELETE_PERSON 101

--3. Create an INSTEAD OF trigger that fires on INSERT, UPDATE and DELETE operation on the Person
--table. For that, log all operation performed on the Person table into PersonLog.

--INSERT TRIGGER

CREATE TRIGGER TR_PERSON_INSTEAD_INSERT
ON PERSON
INSTEAD OF INSERT
AS
BEGIN
	DECLARE @PERSONID INT
	DECLARE @PERSONNAME VARCHAR(50)
	SELECT  @PERSONID = PERSONID FROM inserted
	SELECT  @PERSONNAME = PERSONNAME FROM inserted
	
	INSERT INTO PERSONLOG VALUES(@PERSONID,@PERSONNAME,'INSTEAD OF INSERT',GETDATE())
END

EXEC PR_INSERT_PERSON 104,'RHYDHAM',200000,'20090928','BENGLORE',22,'20090928' 

SELECT * FROM PERSON
SELECT * FROM PERSONLOG

--UPDATE TRIGGER

CREATE TRIGGER TR_PERSON_INSTEAD_UPDATE
ON PERSON
INSTEAD OF UPDATE
AS
BEGIN
	DECLARE @PERSONID INT
	DECLARE @PERSONNAME VARCHAR(50)
	SELECT  @PERSONID = PERSONID FROM inserted
	SELECT  @PERSONNAME = PERSONNAME FROM inserted
	
	INSERT INTO PERSONLOG VALUES(@PERSONID,@PERSONNAME,'INSTEAD OF UPDATE',GETDATE())
END

--DELETE TRIGGER

CREATE TRIGGER TR_PERSON_INSTEAD_DELETE
ON PERSON
INSTEAD OF DELETE
AS
BEGIN
	DECLARE @PERSONID INT
	DECLARE @PERSONNAME VARCHAR(50)
	SELECT  @PERSONID = PERSONID FROM deleted
	SELECT  @PERSONNAME = PERSONNAME FROM deleted
	
	INSERT INTO PERSONLOG VALUES(@PERSONID,@PERSONNAME,'INSTEAD OF DELETE',GETDATE())
END

--4. Create DELETE trigger on PersonLog table, when we delete any record of PersonLog table it prints
--‘Record deleted successfully from PersonLog’.

CREATE TRIGGER TR_DELETE_PERSONLOG
ON PERSONLOG
FOR DELETE
AS
BEGIN
	PRINT 'Record deleted successfully from PersonLog';
END

SELECT * FROM PERSONLOG
DELETE PERSONLOG WHERE PLOGID = 1

--5. Create INSERT trigger on person table, which calculates the age and update that age in Person
--table.

--INSERT  TRIGGER 

ALTER TRIGGER TR_INSERT_PERSON_CALCULATESAGE
ON PERSON
FOR INSERT
AS
BEGIN
	DECLARE @AGE INT
	DECLARE @PERSONID INT
	SELECT @AGE = YEAR(BIRTHDATE) FROM inserted
	SELECT @PERSONID = PERSONID FROM inserted
	UPDATE PERSON 
	SET AGE = YEAR(GETDATE()) - @AGE
	WHERE PERSONID = @PERSONID
END

DROP TRIGGER TR_INSERT_PERSON
DROP TRIGGER TR_PERSON_INSTEAD_INSERT

EXEC PR_INSERT_PERSON 109,'TAYLOR',900909,'20000909','LONDON',12,'19891213'
SELECT * FROM PERSON

SELECT YEAR(GETDATE()) - 2000